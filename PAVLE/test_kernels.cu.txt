#ifndef _TEST_KERNEL_H_
#define _TEST_KERNEL_H_

//#include "print_helpers.h"
#if __DEVICE_EMULATION__
#include "stdio.h"
__device__ void print32Bits2(unsigned int k, unsigned int id, unsigned int number, unsigned int numbits) {
	printf("k = %d, (%d), numbits: %d:\t", k, id, numbits);
	unsigned int mask = 0x80000000;
	for(unsigned int j = 0; j < 32; j++)  {
		if ((32-j)<=numbits) {
		if (number & mask) printf("1");
			else printf("0");
		}
		mask = mask >> 1;
	}
	printf("\n");
}
#endif

__global__ void static check_gm_kernel(unsigned int* out) {
	unsigned int kn = blockIdx.x*blockDim.x + threadIdx.x;
	#if __DEVICE_EMULATION__
	print32Bits2(threadIdx.x, 0, out[kn], 32); 
	#endif
}

__global__ void static test_copy(unsigned int* data, unsigned int* out) {

		unsigned int kn = blockIdx.x*blockDim.x + threadIdx.x;
		out[kn] = data[kn];
}





#endif 